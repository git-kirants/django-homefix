# Generated by Django 5.1.6 on 2025-02-07 09:06

from django.db import migrations
from django.db.models import Q

def populate_conversations(apps, schema_editor):
    ChatMessage = apps.get_model('chat', 'ChatMessage')
    Conversation = apps.get_model('chat', 'Conversation')
    ServiceRequest = apps.get_model('services', 'ServiceRequest')
    
    # Create conversations for each service request
    for service_request in ServiceRequest.objects.all():
        # Check if there are any messages for this service request
        messages = ChatMessage.objects.filter(
            Q(sender=service_request.client, receiver=service_request.service_provider) |
            Q(sender=service_request.service_provider, receiver=service_request.client)
        ).order_by('-timestamp')
        
        if messages.exists():
            conversation = Conversation.objects.create(
                service_request=service_request,
                last_message=messages.first().message
            )
            # Update messages to link to the conversation
            messages.update(conversation=conversation)

def reverse_populate_conversations(apps, schema_editor):
    Conversation = apps.get_model('chat', 'Conversation')
    Conversation.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0003_remove_chatmessage_service_request_conversation_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_conversations, reverse_populate_conversations),
    ]
